export const ADD_TYPING_INDICATOR = `indicators/ADD_TYPING_INDICATOR`;
export const DELETE_TYPING_INDICATOR = `indicators/DELETE_TYPING_INDICATOR`;

export const initialState = {
  typing: []
};

export default function reducer(state = initialState, action) {
  switch (action.type) {
  case ADD_TYPING_INDICATOR:
    if (state.typing.indexOf(action.payload.userId) === -1) {
      return {typing: [action.payload.userId, ...state.typing]};
    }
    return state;
  case DELETE_TYPING_INDICATOR:
    return {
      typing: state.typing.filter((userId) => userId !== action.payload.userId)
    };
  default:
    return state;
  }
}

export function addTyping(userId) {
  return {
    type: ADD_TYPING_INDICATOR,
    payload: {
      userId
    }
  };
}

export function deleteTyping(userId) {
  return {
    type: DELETE_TYPING_INDICATOR,
    payload: {
      userId
    }
  };
}

export function setTyping(userId, value) {
  return (dispatch) => {
    if (value) {
      dispatch(addTyping(userId));
    }
    else {
      dispatch(deleteTyping(userId));
    }
  };
}
