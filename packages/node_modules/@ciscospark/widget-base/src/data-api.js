import {
  camelCase,
  kebabCase
} from 'lodash';

function getDataAttributes(el) {
  const data = {};
  if (el) {
    const attribs = el.attributes;
    for (let i = 0; i < attribs.length; i++) {
      const name = attribs[i].name;
      const val = attribs[i].value;
      if (name.startsWith(`data-`) && name !== `data-toggle`) {
        data[camelCase(name.replace(`data-`, ``))] = val;
      }
    }
  }
  return data;
}

function loadWidgets(name, widgetInit) {
  const widgets = document.querySelectorAll(`[data-toggle^="ciscospark-${kebabCase(name)}"]`);
  for (const widget of widgets) {
    // find what widget this is
    if (typeof widgetInit === `function`) {
      // grab all data attributes that are not data-toggle
      const props = getDataAttributes(widget);
      // Use browser globals to init widget if available
      if (window.ciscospark.widget) {
        const widgetObj = window.ciscospark.widget(widget);
        const widgetName = `${name}Widget`;
        if (typeof widgetObj[widgetName] === `function`) {
          widgetObj[widgetName](props);
        }
      }
      else {
        widgetInit(widget, props);
      }
    }
  }
}

export default function setupDataAPI(widgetName, widgetInit) {
  const onDOMReady = () => {
    loadWidgets(widgetName, widgetInit);
    document.removeEventListener(`DOMContentLoaded`, onDOMReady);
  };

  document.addEventListener(`DOMContentLoaded`, onDOMReady, false);
}
