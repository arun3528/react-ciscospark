import {STATE_NAME} from './reducer';

export const ACTIVITY_TYPE_MESSAGE = `ACTIVITY_TYPE_MESSAGE`;
export const ACTIVITY_TYPE_MEET = `ACTIVITY_TYPE_MEET`;
export const UPDATE_ACTIVITY_TYPE = `widget-message-meet/UPDATE_ACTIVITY_TYPE`;
function updateActivityType(type) {
  return {
    type: UPDATE_ACTIVITY_TYPE,
    payload: {
      type
    }
  };
}

export const UPDATE_ACTIVITY_MENU_VISIBLE = `widget-message-meet/UPDATE_ACTIVITY_MENU_VISIBLE`;
export function updateActivityMenuVisible(isActivityMenuVisible) {
  return {
    type: UPDATE_ACTIVITY_MENU_VISIBLE,
    payload: {
      isActivityMenuVisible
    }
  };
}

export const REMOVE_WIDGET = `widget-message-meet/REMOVE_WIDGET`;
export function removeWidget() {
  return {
    type: REMOVE_WIDGET
  };
}

/**
 * Sets the primary activity to a message
 *
 * @export
 * @returns {Promise}
 */
export function setActivityMessage() {
  return (dispatch) => {
    dispatch(updateActivityType(ACTIVITY_TYPE_MESSAGE));
  };
}

/**
 * Sets the primary activity to a meet (video)
 *
 * @export
 * @returns {Promise}
 */
export function setActivityMeet() {
  return (dispatch) => {
    dispatch(updateActivityType(ACTIVITY_TYPE_MEET));
  };
}

export function setActivityMenuVisible(isActivityMenuVisible) {
  return (dispatch) => {
    dispatch(updateActivityMenuVisible(isActivityMenuVisible));
  };
}

export function toggleActivityMenu() {
  return (dispatch, getState) => {
    const state = getState()[STATE_NAME];
    dispatch(updateActivityMenuVisible(!state.get(`activityMenuVisible`)));
  };
}
